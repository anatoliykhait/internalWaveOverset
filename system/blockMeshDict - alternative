/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2012                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale         1.0;

#include   "geometry"

vertices
(
    ( $tankLeft    #calc"-$domainWidth"   $tankBottom ) // 0
    ( $tankRight   #calc"-$domainWidth"   $tankBottom ) // 1
    ( $tankRight          $domainWidth    $tankBottom ) // 2
    ( $tankLeft           $domainWidth    $tankBottom ) // 3
    ( $tankLeft    #calc"-$domainWidth"   $tankTop    ) // 4
    ( $tankRight   #calc"-$domainWidth"   $tankTop    ) // 5
    ( $tankRight          $domainWidth    $tankTop    ) // 6
    ( $tankLeft           $domainWidth    $tankTop    ) // 7

    // movingZone
    ( #calc"-$outerRad"   #calc"-$domainWidth"   0.0               ) // 8
    ( #calc"-$cylRad"     #calc"-$domainWidth"   0.0               ) // 9
    ( #calc"-$cylRad"            $domainWidth    0.0               ) // 10
    ( #calc"-$outerRad"          $domainWidth    0.0               ) // 11

    ( 0.0                 #calc"-$domainWidth"   $outerRad         ) // 12
    ( 0.0                 #calc"-$domainWidth"   $cylRad           ) // 13
    ( 0.0                        $domainWidth    $cylRad           ) // 14
    ( 0.0                        $domainWidth    $outerRad         ) // 15

    ( $outerRad           #calc"-$domainWidth"   0.0               ) // 16
    ( $cylRad             #calc"-$domainWidth"   0.0               ) // 17
    ( $cylRad                    $domainWidth    0.0               ) // 18
    ( $outerRad                  $domainWidth    0.0               ) // 19

    ( 0.0                 #calc"-$domainWidth"   #calc"-$outerRad" ) // 20
    ( 0.0                 #calc"-$domainWidth"   #calc"-$cylRad"   ) // 21
    ( 0.0                        $domainWidth    #calc"-$cylRad"   ) // 22
    ( 0.0                        $domainWidth    #calc"-$outerRad" ) // 23
);

blocks
(
    hex ( 0 1 2 3 4 5 6 7 ) ( 100 1 100 ) simpleGrading ( 1 1 1 )

    hex ( 8  9  10 11 12 13 14 15 ) movingZone1 ( 20 1 20 ) simpleGrading ( 1 1 1 )
    hex ( 12 13 14 15 16 17 18 19 ) movingZone1 ( 20 1 20 ) simpleGrading ( 1 1 1 )
    hex ( 16 17 18 19 20 21 22 23 ) movingZone1 ( 20 1 20 ) simpleGrading ( 1 1 1 )
    hex ( 20 21 22 23 8  9  10 11 ) movingZone1 ( 20 1 20 ) simpleGrading ( 1 1 1 )
);

edges
(
    arc  9   13 ( #calc"-$cylRad*cos(M_PI/4.0)"   #calc"-$domainWidth"   #calc"$cylRad*cos(M_PI/4.0)"  )
    arc  10  14 ( #calc"-$cylRad*cos(M_PI/4.0)"          $domainWidth    #calc"$cylRad*cos(M_PI/4.0)"  )
    arc  13  17 ( #calc" $cylRad*cos(M_PI/4.0)"   #calc"-$domainWidth"   #calc"$cylRad*cos(M_PI/4.0)"  )
    arc  14  18 ( #calc" $cylRad*cos(M_PI/4.0)"          $domainWidth    #calc"$cylRad*cos(M_PI/4.0)"  )
    arc  17  21 ( #calc" $cylRad*cos(M_PI/4.0)"   #calc"-$domainWidth"   #calc"-$cylRad*cos(M_PI/4.0)" )
    arc  18  22 ( #calc" $cylRad*cos(M_PI/4.0)"          $domainWidth    #calc"-$cylRad*cos(M_PI/4.0)" )
    arc  21  9  ( #calc"-$cylRad*cos(M_PI/4.0)"   #calc"-$domainWidth"   #calc"-$cylRad*cos(M_PI/4.0)" )
    arc  22  10 ( #calc"-$cylRad*cos(M_PI/4.0)"          $domainWidth    #calc"-$cylRad*cos(M_PI/4.0)" )

    arc  8   12 ( #calc"-$outerRad*cos(M_PI/4.0)"   #calc"-$domainWidth"   #calc"$outerRad*cos(M_PI/4.0)"  )
    arc  11  15 ( #calc"-$outerRad*cos(M_PI/4.0)"          $domainWidth    #calc"$outerRad*cos(M_PI/4.0)"  )
    arc  12  16 ( #calc" $outerRad*cos(M_PI/4.0)"   #calc"-$domainWidth"   #calc"$outerRad*cos(M_PI/4.0)"  )
    arc  15  19 ( #calc" $outerRad*cos(M_PI/4.0)"          $domainWidth    #calc"$outerRad*cos(M_PI/4.0)"  )
    arc  16  20 ( #calc" $outerRad*cos(M_PI/4.0)"   #calc"-$domainWidth"   #calc"-$outerRad*cos(M_PI/4.0)" )
    arc  19  23 ( #calc" $outerRad*cos(M_PI/4.0)"          $domainWidth    #calc"-$outerRad*cos(M_PI/4.0)" )
    arc  20  8  ( #calc"-$outerRad*cos(M_PI/4.0)"   #calc"-$domainWidth"   #calc"-$outerRad*cos(M_PI/4.0)" )
    arc  23  11 ( #calc"-$outerRad*cos(M_PI/4.0)"          $domainWidth    #calc"-$outerRad*cos(M_PI/4.0)" )
);

boundary
(
    oversetBoundary
    {
        type overset;
        faces
        (
            ( 8  12 15 11 )
            ( 12 16 19 15 )
            ( 16 20 23 19 )
            ( 8  11 23 20 )
        );
    }

    top
    {
        type wall;
        faces
        (
            ( 4 5 6 7 )
        );
    }

    walls
    {
        type wall;
        faces
        (
            ( 0 3 2 1 )
            ( 0 4 7 3 )
            ( 2 6 5 1 )
        );
    }

    frontAndBack
    {
        type empty;
        faces
        (
            ( 3 7 6 2 )
            ( 1 5 4 0 )
        );
    }

    cylinder
    {
        type wall;
        faces
        (
            ( 9  10 14 13 )
            ( 13 14 18 17 )
            ( 17 18 22 21 )
            ( 9  21 22 10 )
        );
    }

    frontAndBack1
    {
        type empty;
        faces
        (
            ( 10 11 15 14 )
            ( 14 15 19 18 )
            ( 18 19 23 22 )
            ( 22 23 11 10 )
            ( 8  9  13 12 )
            ( 12 13 17 16 )
            ( 16 17 21 20 )
            ( 9  8  20 21 )
        );
    }
);

// ************************************************************************* //
